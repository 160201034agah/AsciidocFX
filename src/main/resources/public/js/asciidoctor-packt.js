/* Generated by Opal 0.6.3 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $hash2 = $opal.hash2;
  var packtCache = {};
  return (function($base) {
    var self = $module($base, 'Asciidoctor');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $PacktConverter(){};
      var self = $PacktConverter = $klass($base, $super, 'PacktConverter', $PacktConverter);

      var def = self._proto, $scope = self._scope;

      return (def.$convert = function(node, template_name, opts) {
        var $a, self = this, backend = nil, templatedir = nil, node_name = nil;

            window.nodee = node;

        if (template_name == null) {
          template_name = nil
        }
        if (opts == null) {
          opts = $hash2([], {})
        }
        backend = ((($a = node.$document().$attributes()['$[]']("backend")) !== false && $a !== nil) ? $a : "");
        templatedir = ((($a = node.$document().$attributes()['$[]']("templatedir")) !== false && $a !== nil) ? $a : "");
        node_name = ((($a = node.$node_name()) !== false && $a !== nil) ? $a : "");

            console.log("Entered",node_name);
        
          var template = afx.getTemplate(templatedir,backend,node_name)
            if(!packtCache[node_name] ){ // dikkat
              var compiled = jade.compile(template, {pretty: true});
              packtCache[node_name] = compiled;
            }

            node.encode64 = function(target){
              return afx.encode64(target);
            };

            console.log("Exited",node_name,packtCache[node_name]);

          return packtCache[node_name]({ node: node });
      ;
      }, nil) && 'convert'
    })($scope.Converter, ($scope.Converter)._scope.Base)
    
  })(self)
})(Opal);
