/* Generated by Opal 0.8.0 */
Opal.modules["data-uri-treeprocessor/extension"] = function (Opal) {
    Opal.dynamic_require_severity = "ignore";
    var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2;

    if ($scope.get('RUBY_ENGINE')['$==']("opal")) {
    }
    ;
    self.$include(Opal.get('Asciidoctor'));
    return (function ($base, $super) {
        function $DataUriTreeprocessor() {
        };
        var self = $DataUriTreeprocessor = $klass($base, $super, 'DataUriTreeprocessor', $DataUriTreeprocessor);

        var def = self.$$proto, $scope = self.$$scope;

        return (def.$process = function (document) {
                var self = this;

                if (document.$attr("data-uri")["$nil?"]()) {
                    return document;
                }

                //document.attributes.$delete("data-uri");
                //document.attribute_overrides.$delete("data-uri");

                var backend = document.$backend();

                if (backend == 'odf' || backend == 'docbook5' || backend == 'docbook45')
                    return document;

                try {
                    var imageNodes = document.$find_by(Opal.hash2(['context'], {"context": "image"}));

                    imageNodes.forEach(function (node) {

                        var target = node.$attr('target');

                        var imageUri = node.$image_uri(target);
                        var mimetype = "image/png";

                        if (imageUri) {
                            var uriParts = imageUri.split(".");
                            if (uriParts.length >= 2) {
                                var ext = uriParts[uriParts.length - 1];
                                mimetype = ext == "svg" ? "image/svg+xml" : "image/" + ext;
                            }
                        }

                        var params = {
                            path: imageUri,
                            mimetype: mimetype
                        }

                        var dataUri = Ajax.postFile("/read-data-uri", params);

                        node.$attributes()['$[]=']("target", dataUri);

                    });
                } catch (e) {
                    //console.log(e);
                }

                return document;
            }, nil) && 'process'
    })(self, (($scope.get('Extensions')).$$scope.get('Treeprocessor')));
};
/* Generated by Opal 0.8.0 */
Opal.modules["data-uri-treeprocessor"] = function (Opal) {
    Opal.dynamic_require_severity = "ignore";
    var $a, $b, TMP_1, self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

    if ($scope.get('RUBY_ENGINE')['$==']("opal")) {
        self.$require("data-uri-treeprocessor/extension")
    }
    ;
    return ($a = ($b = $scope.get('Extensions')).$register, $a.$$p = (TMP_1 = function () {
        var self = TMP_1.$$s || this;

        return self.$treeprocessor($scope.get('DataUriTreeprocessor'))
    }, TMP_1.$$s = self, TMP_1), $a).call($b);
};

Opal.require('data-uri-treeprocessor');
Opal.require('data-uri-treeprocessor/extension');