/* Generated by Opal 0.6.3 */
var templateMap = {
    revealjs: {},
    deckjs: {}
};
(function ($opal) {
    var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $hash2 = $opal.hash2;

    return (function ($base) {
        var self = $module($base, 'Asciidoctor');

        var def = self._proto, $scope = self._scope;

        (function ($base, $super) {
            function $DeckjsConverter() {
            };
            var self = $DeckjsConverter = $klass($base, $super, 'DeckjsConverter', $DeckjsConverter);

            var def = self._proto, $scope = self._scope;

            return (def.$convert = function (node, template_name, opts) {

                    var self = this;

                    var obj = {};
                    obj.node= node;
                    obj.name = node.$node_name ? node.$node_name() : "";

                    // Cache disabled icin comment yap
                    //var templateMap = {
                    //    revealjs: {},
                    //    deckjs: {}
                    //};

                    var map = templateMap["deckjs"];

                    if (!map)
                        return "";

                    if (!map[obj.name]) {
                        var template = afx.getTemplate(obj.name + ".jade", "deckjs");
                        var fn = jade.compile(template, {pretty: true});
                        map[obj.name] = fn;
                    }

                    var result = map[obj.name](obj);

                    return result;


                    if (template_name == null) {
                        template_name = nil
                    }
                    if (opts == null) {
                        opts = $hash2([], {})
                    }
                    return nil;
                }, nil) && 'convert'
        })($scope.Converter, ($scope.Converter)._scope.Base)

    })(self)
})(Opal);