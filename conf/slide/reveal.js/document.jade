doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        each key in ["description","keywords","author","copyright"]
            if attr[key]
                meta(name=key,content=attr[key])
        title= "Slaytshow"
        meta(content="yes",name="apple-mobile-web-app-capable")
        meta(content="black-translucent",name="apple-mobile-web-app-status-bar-style")
        meta(content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui",name="viewport")
        link(href="reveal.js/css/reveal.css",rel="stylesheet")
        link(rel='stylesheet',href='reveal.js/css/theme/night.css',id='theme')
        link(href="reveal.js/lib/css/zenburn.css",rel="stylesheet")
        script(type='text/javascript').
            function replaceSlides(data) {
                var div = document.createElement("div");
                div.innerHTML = data;
                document.querySelector("div.slides").innerHTML = div.querySelector("div.slides").innerHTML
                setTimeout(function(){
                    initializeReveal()
                },50);
            }
        script(type='text/javascript').
            document.write('<link rel="stylesheet" href="reveal.js/css/print/' + ( window.location.search.match(/print-pdf/gi) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">');
    body
        .reveal
            .slides
                !{content}
        script(src = "reveal.js/lib/js/head.min.js")
        script(src = "reveal.js/js/reveal.js")
        script(type='text/javascript').
            function initializeReveal() {
                // See https://github.com/hakimel/reveal.js#configuration for a full list of configuration options
                Reveal.initialize({
                    // Display controls in the bottom right corner
                    controls: #{attr.revealjs_controls ? attr.revealjs_controls : "true"},
                    // Display a presentation progress bar
                    progress: !{attr.revealjs_progress ? attr.revealjs_progress : "true"},
                    // Display the page number of the current slide
                    slideNumber: !{attr.revealjs_slidenumber ? attr.revealjs_slidenumber : "true"},
                    // Push each slide change to the browser history
                    history: !{attr.revealjs_history ? attr.revealjs_history : "true"},
                    // Enable keyboard shortcuts for navigation
                    keyboard: !{attr.revealjs_keyboard ? attr.revealjs_keyboard : "true"},
                    // Enable the slide overview mode
                    overview: !{attr.revealjs_overview ? attr.revealjs_overview : "true"},
                    // Vertical centering of slides
                    center: !{attr.revealjs_center ? attr.revealjs_center : "true"},
                    // Enables touch navigation on devices with touch input
                    touch: !{attr.revealjs_touch ? attr.revealjs_touch : "true"},
                    // Loop the presentation
                    loop: !{attr.revealjs_loop ? attr.revealjs_loop : "false"},
                    // Change the presentation direction to be RTL
                    rtl: !{attr.revealjs_rtl ? attr.revealjs_rtl : "false"},
                    // Turns fragments on and off globally
                    fragments: !{attr.revealjs_fragments ? attr.revealjs_fragments : "true"},
                    // Flags if the presentation is running in an embedded mode,
                    // i.e. contained within a limited portion of the screen
                    embedded: !{attr.revealjs_embedded ? attr.revealjs_embedded : "false"},
                    // Number of milliseconds between automatically proceeding to the
                    // next slide, disabled when set to 0, this value can be overwritten
                    // by using a data-autoslide attribute on your slides
                    autoSlide: !{attr.revealjs_autoslide ? attr.revealjs_autoslide : 0},
                    // Stop auto-sliding after user input
                    autoSlideStoppable: !{attr.revealjs_autoslidestoppable ? attr.revealjs_autoslidestoppable : "true"},
                    // Enable slide navigation via mouse wheel
                    mouseWheel: !{attr.revealjs_mousewheel ? attr.revealjs_mousewheel : "true"},
                    // Hides the address bar on mobile devices
                    hideAddressBar: !{attr.revealjs_hideaddressbar ? attr.revealjs_hideaddressbar : "true" },
                    // Opens links in an iframe preview overlay
                    previewLinks: !{attr.revealjs_previewlinks ? attr.revealjs_previewlinks : 'false'},
                    // Theme (e.g., beige, blond, default, moon, night, serif, simple, sky, solarized)
                    theme: Reveal.getQueryHash().theme || !{attr.revealjs_theme ? attr.revealjs_theme : "\"night\""},
                    // Transition style (e.g., default, cube, page, concave, zoom, linear, fade, none)
                    transition: Reveal.getQueryHash().transition || !{attr.revealjs_transition ? attr.revealjs_transition : "\"default\""},
                    // Transition speed (e.g., default, fast, slow)
                    transitionSpeed: !{attr.revealjs_transitionspeed ? attr.revealjs_transitionspeed : '\"default\"' },
                    // Transition style for full page slide backgrounds (e.g., default, none, slide, concave, convex, zoom)
                    backgroundTransition: !{attr.revealjs_backgroundtransition ? attr.revealjs_backgroundtransition : "\"default\""},
                    // Number of slides away from the current that are visible
                    viewDistance: !{attr.revealjs_viewdistance ? attr.revealjs_viewdistance : 3},
                    // Parallax background image (e.g., "'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'")
                    parallaxBackgroundImage: !{attr.revealjs_parallaxbackgroundimage ? attr.revealjs_parallaxbackgroundimage : "null" },
                    // Parallax background size in CSS syntax (e.g., "2100px 900px")
                    parallaxBackgroundSize: !{attr.revealjs_parallaxbackgroundsize ? attr.revealjs_parallaxbackgroundsize : "null" },
                    // Optional libraries used to extend on reveal.js
                    dependencies: [
                        {
                            src: 'reveal.js/lib/js/classList.js', condition: function () {
                            return !document.body.classList;
                        }
                        },
                        #{(attr['source-highlighter'] == 'highlight.js') ? "{ src: 'reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }" : {}},
                        {
                            src: 'reveal.js/plugin/notes/notes.js', async: true, condition: function () {
                            return !!document.body.classList;
                        }
                        }
                    ]
                });
            }
            initializeReveal();
            alert("Ready");